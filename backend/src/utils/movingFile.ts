import { existsSync } from 'fs'
import { rename, mkdir } from 'fs/promises'
import { basename, join } from 'path'

async function movingFile(imagePath: string, from: string, to: string) {
    const fileName = basename(imagePath)
    const imagePathTemp = join(from, fileName)
    const imagePathPermanent = join(to, fileName)
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª: ${imagePathTemp}`)
    if (!existsSync(imagePathTemp)) {
        throw new Error(`–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${imagePathTemp}`)
    }

    try {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω–µ—á–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        await mkdir(to, { recursive: true })
        await rename(imagePathTemp, imagePathPermanent)
        console.log(
            `–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–º–µ—â—ë–Ω: ${imagePathTemp} ‚Üí ${imagePathPermanent}`
        )
    } catch (err) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: ${err}`)
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞')
    }
}

export default movingFile
